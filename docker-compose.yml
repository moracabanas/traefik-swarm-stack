version: "3.3"

services:
  traefik:
    container_name: ${TRAEFIK_CONTAINER_NAME:-traefik}
    image: "traefik:${TRAEFIK_IMAGE_TAG:-latest}"
    command:
      - "--log.level=DEBUG"
      - "--api.insecure=true"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--entrypoints.websecure.address=:443" # Traefik will listen to incoming request on the port 443 (https)
      - "--certificatesresolvers.mytlschallenge.acme.tlschallenge=true" # Enable a tls challenge named "mytlschallenge"
      #- "--certificatesresolvers.mytlschallenge.acme.caserver=https://acme-staging-v02.api.letsencrypt.org/directory"
      - "--certificatesresolvers.mytlschallenge.acme.email=${ACME_EMAIL}"
      - "--certificatesresolvers.mytlschallenge.acme.storage=/letsencrypt/acme.json" # Tell to store the certificate on a path under our volume
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro" 
      - ".letsencrypt:/letsencrypt" # Create a letsencrypt dir within the folder where the docker-compose file is
    labels:
      # Redirect 80 to 443
      - "traefik.http.routers.http-catchall.rule=hostregexp(`{host:.+}`)"
      - "traefik.http.routers.http-catchall.entrypoints=web"
      - "traefik.http.routers.http-catchall.middlewares=redirect-to-https"
      - "traefik.http.middlewares.redirect-to-https.redirectscheme.scheme=https"
      
      # Traefic dashboard
      - "traefik.enable=true"
      - "traefik.http.routers.traefik.rule=Host(`${URL_TRAEFIK_DASHBOARD}`)"
      - "traefik.http.routers.traefik.service=api@internal"
      - "traefik.http.routers.traefik.tls.certresolver=mytlschallenge"
      - "traefik.http.routers.traefik.entrypoints=websecure"
      - "traefik.http.routers.traefik.middlewares=authtraefik"
      - "traefik.http.middlewares.authtraefik.basicauth.users=${HTTPD_AUTH}"

      
  portainer:
    container_name: ${PORTAINER_CONTAINER_NAME:-portainer}
    image: portainer/${PORTAINER_IMAGE_TAG:-portainer-ce}
    command: -H unix:///var/run/docker.sock
    restart: always
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - portainer_data:/data
    labels:
      # Frontend
      - "traefik.enable=true"
      - "traefik.http.routers.frontend.rule=Host(`${URL_PORTAINER_FRONTEND}`)"
      - "traefik.http.routers.frontend.entrypoints=websecure"
      - "traefik.http.services.frontend.loadbalancer.server.port=9000"
      - "traefik.http.routers.frontend.service=frontend"
      - "traefik.http.routers.frontend.tls.certresolver=mytlschallenge" # Uses the Host rule to define which certificate to issue
      
      # Edge
      - "traefik.http.routers.edge.rule=Host(`${URL_PORTAINER_EDGE}`)"
      - "traefik.http.routers.edge.entrypoints=websecure"
      - "traefik.http.services.edge.loadbalancer.server.port=8000"
      - "traefik.http.routers.edge.service=edge"
      - "traefik.http.routers.edge.tls.certresolver=mytlschallenge" # Uses the Host rule to define which certificate to issue


volumes:
  portainer_data:


# Docs
# https://doc.traefik.io/traefik/v2.0/user-guides/docker-compose/acme-tls/
# https://github.com/xe-nvdk/awesome-docker/tree/main/traefik-nextcloud-psql